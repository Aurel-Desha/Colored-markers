h1 {
    text-align: center;
  }
  
  .container {
    background-color: rgb(255, 255, 255);
    padding: 10px 0;
  }
  
  .marker {
    width: 200px;
    height: 25px;
    margin: 10px auto;
  }
  
  .cap {
    width: 60px;
    height: 25px;
  }
  
  .sleeve {
    width: 110px;
    height: 25px;
    background-color: rgba(255, 255, 255, 0.5);
    border-left: 10px double rgba(0, 0, 0, 0.75);
  }
  
  .cap, .sleeve {
    display: inline-block;
  }
  
  .red {
    background: linear-gradient(rgb(122, 74, 14), rgb(245, 62, 113), rgb(162, 27, 27));
    box-shadow: 0 0 20px 0 rgba(83, 14, 14, 0.8);
  }
  
  .green {
    background: linear-gradient(#55680D, #71F53E, #116C31);
    box-shadow: 0 0 20px 0 #3B7E20CC;
  }
  
  .blue {
    background: linear-gradient(hsl(186, 76%, 16%), hsl(223, 90%, 60%), hsl(240, 56%, 42%));
    box-shadow: 0 0 20px 0 hsla(223, 59%,31%,0.8);
  }
  


  /*
  --------------------------------------------LINEAR GRADIENT-----------------------------------------------------------------------------------------------
The linear-gradient function is very flexible -- here is the basic syntax you'll use in this tutorial:
Example Code
linear-gradient(gradientDirection, color1, color2, ...);

If no gradientDirection argument is provided to the linear-gradient function, it arranges colors from top to bottom, or along a 180 degree line, by default.




-------------------------------------------------OPACITY AND RGBA------------------------------------------------------------------------------------------------------
************** OPACITY***************************
Opacity describes how opaque, or non-transparent, something is. For example, a solid wall is opaque, and no light can pass through. 
But a drinking glass is much more transparent, and you can see through the glass to the other side
With the CSS opacity property, you can control how opaque or transparent an element is. With the value 0, or 0%, the element will be completely transparent, 
and at 1.0, or 100%, the element will be completely opaque like it is by default.
Another way to set the opacity for an element is with the alpha channel. Similar to the opacity property, the alpha channel controls how transparent or opaque a color is

********************* RGBA with alpha channel*************************
The rgba function works just like the rgb function, but takes one more number from 0 to 1.0 for the alpha channel:
--------------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------DISPLAY--------------------------------------------------------------------------------------------------------
the default display property for div elements is block. So when two block elements are next to each other, they stack like actual blocks. For example,
 your marker elements are all stacked on top of each other.

To position two div elements on the same line, set their display properties to inline-block.



----------------------------------------BOX-SHADOW-----------------------------------------------------------------------------------------------------
The box-shadow property lets you apply one or more shadows around an element. Here is basic syntax:

Example Code
box-shadow: offsetX offsetY color;     box-shadow: -5px -5px red;
Here's how the offsetX and offsetY values work:

both offsetX and offsetY accept number values in px and other CSS units
a positive offsetX value moves the shadow right and a negative value moves it left
a positive offsetY value moves the shadow down and a negative value moves it up
if you want a value of zero (0) for any or both offsetX and offsetY, you don't need to add a unit. Every browser understands that zero means no change.

*******************************BLURRADIUS**********************************************************************************************
Notice that the edges of the shadow are sharp. This is because there is an optional blurRadius value for the box-shadow property:

Example Code
box-shadow: offsetX offsetY blurRadius color;   box-shadow: -5px -5px 5px red;

If a blurRadius value isn't included, it defaults to 0 and produces sharp edges. The higher the value of blurRadius, the greater the blurring effect is.


*********************************SPREADRADIUS********************************************************************************
But what if you wanted to expand the shadow out further? You can do that with the optional spreadRadius value:

Example Code
box-shadow: offsetX offsetY blurRadius spreadRadius color;
Like blurRadius, spreadRadius defaults to 0 if it isn't included.